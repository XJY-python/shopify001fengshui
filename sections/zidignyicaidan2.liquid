{% comment %}
  自定义菜单系统 - 增强版
  左侧：下拉菜单按钮，右侧：产品信息展示
  说明：支持自定义宽度，下拉方式展现系列分类，右侧展示产品信息
{% endcomment %}

{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}
{{ 'font-awesome.css' | asset_url | stylesheet_tag }}

{% schema %}
{
  "name": "自定义菜单系统",
  "class": "custom-menu-section",
  "settings": [
    {
      "type": "header",
      "content": "布局设置"
    },
    {
      "type": "range",
      "id": "menu_width",
      "label": "菜单面板宽度",
      "min": 20,
      "max": 50,
      "step": 5,
      "default": 30,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "product_width",
      "label": "产品面板宽度",
      "min": 50,
      "max": 80,
      "step": 5,
      "default": 70,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "样式设置"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "主色调",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "边框颜色",
      "default": "#e1e1e1"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "背景颜色",
      "default": "#f8f8f8"
    },
    {
      "type": "header",
      "content": "边距设置"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "上边距",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "下边距",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "menu_category",
      "name": "菜单分类",
      "settings": [
        {
          "type": "text",
          "id": "category_title",
          "label": "分类标题",
          "default": "产品分类"
        },
        {
          "type": "text",
          "id": "category_description",
          "label": "分类描述",
          "default": "分类描述内容"
        },
        {
          "type": "header",
          "content": "产品系列配置"
        },
        {
          "type": "collection_list",
          "id": "linked_collections",
          "label": "关联产品系列",
          "limit": 10
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "自定义菜单",
      "category": "导航",
      "blocks": [
        {
          "type": "menu_category",
          "settings": {
            "category_title": "热门商品",
            "category_description": "查看热门商品"
          }
        },
        {
          "type": "menu_category",
          "settings": {
            "category_title": "新品上市",
            "category_description": "最新上架商品"
          }
        }
      ]
    }
  ]
}
{% endschema %}

{%- style -%}
  .custom-menu-section-{{ section.id }} {
    display: flex;
    gap: 20px;
    padding: {{ section.settings.padding_top }}px 20px {{ section.settings.padding_bottom }}px;
    min-height: 500px;
    background-color: {{ section.settings.background_color }};
    max-width: 1200px;
    margin: 0 auto;
  }

  .menu-panel-{{ section.id }} {
    width: {{ section.settings.menu_width }}%;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .products-panel-{{ section.id }} {
    width: {{ section.settings.product_width }}%;
    padding: 20px;
    border: 1px solid {{ section.settings.border_color }};
    border-radius: 12px;
    background: white;
    min-height: 400px;
  }

  /* 下拉菜单样式 */
  .menu-category-{{ section.id }} {
    position: relative;
    background: white;
    border: 1px solid {{ section.settings.border_color }};
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .menu-category-{{ section.id }}:hover {
    background-color: #f8f8f8;
    border-color: #d0d0d0;
  }

  .menu-category-{{ section.id }}.active {
    background-color: #f0f8ff;
    border-color: {{ section.settings.primary_color }};
  }

  .category-header-{{ section.id }} {
    padding: 15px;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    position: relative;
    gap: 10px;
  }

  .category-header-content {
    flex: 1;
    min-width: 0;
  }

  .category-header-{{ section.id }} h3 {
    margin: 0;
    font-size: 16px;
    font-weight: 600;
    color: #333;
    line-height: 1.3;
  }

  .category-header-{{ section.id }} p {
    margin: 8px 0 0 0;
    font-size: 14px;
    color: #666;
    line-height: 1.4;
    display: block;
  }

  .dropdown-icon-container {
    flex-shrink: 0;
    margin-top: 4px;
  }

  .dropdown-icon-{{ section.id }} {
    transition: transform 0.3s ease;
    font-size: 12px;
    color: #666;
    display: block;
  }

  .dropdown-icon-{{ section.id }} {
    transition: transform 0.3s ease;
  }

  .menu-category-{{ section.id }}.active .dropdown-icon-{{ section.id }} {
    transform: rotate(180deg);
  }

  .dropdown-content-{{ section.id }} {
    display: block;
    padding: 15px;
    border-top: 1px solid {{ section.settings.border_color }};
    background: white;
  }

  .collection-list-{{ section.id }} {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .collection-item-{{ section.id }} {
    padding: 8px 0;
    border-bottom: 1px solid #f0f0f0;
    cursor: pointer;
    transition: color 0.2s ease;
  }

  .collection-item-{{ section.id }}:hover {
    color: {{ section.settings.primary_color }};
  }

  .collection-item-{{ section.id }}:last-child {
    border-bottom: none;
  }

  /* 产品展示样式 */
  .product-grid-{{ section.id }} {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
  }

  .product-card-{{ section.id }} {
    border: 1px solid #f0f0f0;
    border-radius: 8px;
    padding: 15px;
    text-align: center;
    transition: all 0.3s ease;
    background: white;
  }

  .product-card-{{ section.id }}:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    border-color: {{ section.settings.primary_color }};
  }

  .product-image-{{ section.id }} {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 6px;
    margin-bottom: 12px;
  }

  .product-title-{{ section.id }} {
    margin: 0 0 8px 0;
    font-size: 16px;
    font-weight: 600;
    color: #333;
  }

  .product-vendor-{{ section.id }} {
    margin: 0 0 8px 0;
    font-size: 14px;
    color: #666;
  }

  .product-price-{{ section.id }} {
    margin: 0;
    font-size: 18px;
    font-weight: bold;
    color: {{ section.settings.primary_color }};
  }

  .loading-{{ section.id }} {
    text-align: center;
    padding: 60px 20px;
    color: #999;
  }

  .empty-state-{{ section.id }} {
    text-align: center;
    padding: 60px 20px;
    color: #999;
  }

  .empty-state-{{ section.id }} h3 {
    margin: 0 0 10px 0;
    font-size: 18px;
    color: #666;
  }

  .empty-state-{{ section.id }} p {
    margin: 0;
    font-size: 14px;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .custom-menu-section-{{ section.id }} {
      flex-direction: column;
      padding: 20px 15px;
    }

    .menu-panel-{{ section.id }},
    .products-panel-{{ section.id }} {
      width: 100% !important;
    }

    .menu-panel-{{ section.id }} {
      order: 2;
      margin-top: 20px;
    }

    .products-panel-{{ section.id }} {
      order: 1;
      min-height: 300px;
    }

    .product-grid-{{ section.id }} {
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: 15px;
    }

    .product-image-{{ section.id }} {
      height: 150px;
    }

    .product-title-{{ section.id }} {
      font-size: 14px;
    }

    .product-price-{{ section.id }} {
      font-size: 16px;
    }

    .category-header-{{ section.id }} {
      padding: 12px;
    }

    .dropdown-content-{{ section.id }} {
      padding: 12px;
    }
  }
{%- endstyle -%}

<div class="custom-menu-section-{{ section.id }}">
  <!-- 左侧菜单面板 -->
  <div class="menu-panel-{{ section.id }}">
    {% for block in section.blocks %}
      {% if block.type == 'menu_category' %}
        <div class="menu-category-{{ section.id }}" data-category="{{ block.id }}">
          <div class="category-header-{{ section.id }}">
            <div class="category-header-content">
              <h3>{{ block.settings.category_title }}</h3>
              <p>{{ block.settings.category_description }}</p>
            </div>
            <div class="dropdown-icon-container">
              <span class="dropdown-icon-{{ section.id }}">▼</span>
            </div>
          </div>
          
          <div class="dropdown-content-{{ section.id }}">
            {% if block.settings.linked_collections %}
              <ul class="collection-list-{{ section.id }}">
                {% for collection in block.settings.linked_collections %}
                  <li class="collection-item-{{ section.id }}" 
                      data-collection-id="{{ collection.id }}"
                      data-collection-handle="{{ collection.handle }}">
                    {{ collection.title }}
                  </li>
                {% endfor %}
              </ul>
            {% else %}
              <p class="empty-state-{{ section.id }}">未关联任何产品系列</p>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
    
    {% if section.blocks.size == 0 %}
      <div class="empty-state-{{ section.id }}">
        <h3>请添加菜单分类</h3>
        <p>在主题编辑器中点击"添加内容"来创建菜单分类</p>
      </div>
    {% endif %}
  </div>
  
  <!-- 右侧产品展示面板 -->
  <div class="products-panel-{{ section.id }}">
    <div class="empty-state-{{ section.id }}">
      <h3>请将鼠标悬停在左侧菜单上查看产品</h3>
      <p>悬停在菜单分类上显示所有产品，悬停在具体系列上显示该系列产品</p>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = '{{ section.id }}';
  const menuCategories = document.querySelectorAll(`.menu-category-${sectionId}`);
  const productsPanel = document.querySelector(`.products-panel-${sectionId}`);
  let allProductsData = null;
  let hoverTimeout = null;

  // 初始化菜单交互
  function initMenuInteractions() {
    // 菜单分类鼠标悬停事件 - 显示所有系列产品
    menuCategories.forEach(category => {
      category.addEventListener('mouseenter', function() {
        clearTimeout(hoverTimeout);
        loadAllProducts();
      });

      category.addEventListener('mouseleave', function() {
        // 添加延迟，避免快速切换时的闪烁
        hoverTimeout = setTimeout(() => {
          // 鼠标离开分类时保持当前显示状态
        }, 300);
      });
    });

    // 系列项鼠标悬停事件 - 显示单个系列产品
    menuCategories.forEach(category => {
      const collectionItems = category.querySelectorAll(`.collection-item-${sectionId}`);
      collectionItems.forEach(item => {
        item.addEventListener('mouseenter', function(e) {
          clearTimeout(hoverTimeout);
          const collectionId = this.getAttribute('data-collection-id');
          const collectionHandle = this.getAttribute('data-collection-handle');
          loadSingleCollection(collectionId, collectionHandle);
          
          // 设置激活状态
          document.querySelectorAll(`.collection-item-${sectionId}`).forEach(i => 
            i.classList.remove('active')
          );
          this.classList.add('active');
        });
      });
    });

    // 默认加载所有产品
    setTimeout(() => {
      loadAllProducts();
    }, 500);
  }

  // 加载所有系列的产品
  function loadAllProducts() {
    if (allProductsData) {
      displayProducts(allProductsData);
      return;
    }

    // 显示加载状态
    productsPanel.innerHTML = `
      <div class="loading-${sectionId}">
        <div style="font-size: 24px; margin-bottom: 10px;">⏳</div>
        <p>正在加载所有产品...</p>
      </div>
    `;

    // 收集所有系列的产品
    const allCollections = [];
    menuCategories.forEach(category => {
      const collectionItems = category.querySelectorAll(`.collection-item-${sectionId}`);
      collectionItems.forEach(item => {
        const collectionHandle = item.getAttribute('data-collection-handle');
        if (collectionHandle) {
          allCollections.push(collectionHandle);
        }
      });
    });

    if (allCollections.length === 0) {
      showEmptyState();
      return;
    }

    // 并行加载所有系列的产品
    const promises = allCollections.map(handle => 
      fetch(`/collections/${handle}?view=ajax-products`)
        .then(response => response.ok ? response.text() : '')
        .catch(() => '')
    );

    Promise.all(promises)
      .then(results => {
        const combinedHtml = results.filter(html => html.trim()).join('');
        allProductsData = combinedHtml;
        displayProducts(combinedHtml);
      })
      .catch(error => {
        console.error('加载所有产品错误:', error);
        showErrorState();
      });
  }

  // 加载单个系列的产品
  function loadSingleCollection(collectionId, collectionHandle) {
    if (!collectionHandle) return;
    
    // 显示加载状态
    productsPanel.innerHTML = `
      <div class="loading-${sectionId}">
        <div style="font-size: 24px; margin-bottom: 10px;">⏳</div>
        <p>正在加载系列产品...</p>
      </div>
    `;

    // 使用Shopify AJAX API获取产品数据
    fetch(`/collections/${collectionHandle}?view=ajax-products`)
      .then(response => {
        if (!response.ok) throw new Error('网络响应错误');
        return response.text();
      })
      .then(html => {
        displayProducts(html);
      })
      .catch(error => {
        console.error('加载系列产品错误:', error);
        showErrorState();
      });
  }

  // 显示错误状态
  function showErrorState() {
    productsPanel.innerHTML = `
      <div class="empty-state-${sectionId}">
        <div style="font-size: 24px; margin-bottom: 10px;">❌</div>
        <h3>加载失败</h3>
        <p>无法加载产品数据，请稍后重试</p>
      </div>
    `;
  }

  // 显示空状态
  function showEmptyState() {
    productsPanel.innerHTML = `
      <div class="empty-state-${sectionId}">
        <div style="font-size: 24px; margin-bottom: 10px;">📦</div>
        <h3>暂无产品</h3>
        <p>请先配置产品系列</p>
      </div>
    `;
  }

  // 显示产品
  function displayProducts(html) {
    if (!html || html.trim() === '') {
      showEmptyState();
      return;
    }

    // 创建产品网格
    productsPanel.innerHTML = `
      <div class="product-grid-${sectionId}">
        ${html}
      </div>
    `;

    // 添加产品卡片交互效果
    const productCards = productsPanel.querySelectorAll(`.product-card-${sectionId}`);
    productCards.forEach(card => {
      card.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-4px)';
        this.style.boxShadow = '0 8px 25px rgba(0,0,0,0.15)';
      });
      
      card.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(0)';
        this.style.boxShadow = '0 4px 12px rgba(0,0,0,0.1)';
      });
    });
  }

  // 初始化
  initMenuInteractions();
});

// 添加CSS动画
const style = document.createElement('style');
style.textContent = `
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .product-card-{{ section.id }} {
    animation: fadeIn 0.5s ease forwards;
  }
  
  .product-card-{{ section.id }}:nth-child(1) { animation-delay: 0.1s; }
  .product-card-{{ section.id }}:nth-child(2) { animation-delay: 0.2s; }
  .product-card-{{ section.id }}:nth-child(3) { animation-delay: 0.3s; }
  .product-card-{{ section.id }}:nth-child(4) { animation-delay: 0.4s; }
  .product-card-{{ section.id }}:nth-child(5) { animation-delay: 0.5s; }
  .product-card-{{ section.id }}:nth-child(6) { animation-delay: 0.6s; }
  
  /* 悬停效果增强 */
  .collection-item-{{ section.id }}:hover {
    background-color: #f8f8f8;
    transform: translateX(5px);
    transition: all 0.2s ease;
  }
  
  .collection-item-{{ section.id }}.active {
    background-color: #e3f2fd;
    color: {{ section.settings.primary_color }};
    font-weight: 600;
  }
`;
document.head.appendChild(style);
</script>

{% comment %}
  使用说明:
  1. 将此文件保存为 sections/custom-menu.liquid
  2. 在主题编辑器中添加此section
  3. 点击"添加内容"创建菜单按钮
  4. 为每个按钮配置标题、描述和关联的系列
  5. 保存后即可使用
{% endcomment %}
