{% comment %}
  自定义菜单系统 - 增强版
  左侧：下拉菜单按钮，右侧：产品信息展示
  说明：支持自定义宽度，下拉方式展现系列分类，右侧展示产品信息
{% endcomment %}

{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}
{{ 'font-awesome.css' | asset_url | stylesheet_tag }}

{% schema %}
{
  "name": "自定义菜单系统",
  "class": "custom-menu-section",
  "settings": [
    {
      "type": "header",
      "content": "布局设置"
    },
    {
      "type": "range",
      "id": "menu_width",
      "label": "菜单面板宽度",
      "min": 20,
      "max": 50,
      "step": 5,
      "default": 30,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "product_width",
      "label": "产品面板宽度",
      "min": 50,
      "max": 80,
      "step": 5,
      "default": 70,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "label": "桌面端每行产品数量",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 4,
      "unit": "个"
    },
    {
      "type": "range",
      "id": "columns_mobile",
      "label": "移动端每行产品数量",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 2,
      "unit": "个"
    },
    {
      "type": "range",
      "id": "rows_desktop",
      "label": "桌面端显示行数",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 3,
      "unit": "行"
    },
    {
      "type": "range",
      "id": "rows_mobile",
      "label": "移动端显示行数",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 2,
      "unit": "行"
    },
    {
      "type": "header",
      "content": "样式设置"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "主色调",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "边框颜色",
      "default": "#e1e1e1"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "背景颜色",
      "default": "#f8f8f8"
    },
    {
      "type": "header",
      "content": "边距设置"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "上边距",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "下边距",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "menu_category",
      "name": "菜单分类",
      "settings": [
        {
          "type": "text",
          "id": "category_title",
          "label": "分类标题",
          "default": "产品分类"
        },
        {
          "type": "text",
          "id": "category_description",
          "label": "分类描述",
          "default": "分类描述内容"
        },
        {
          "type": "header",
          "content": "菜单图片设置"
        },
        {
          "type": "image_picker",
          "id": "category_image",
          "label": "菜单图片"
        },
        {
          "type": "range",
          "id": "image_width",
          "label": "图片宽度",
          "min": 20,
          "max": 100,
          "step": 5,
          "default": 60,
          "unit": "px"
        },
        {
          "type": "range",
          "id": "image_height",
          "label": "图片高度",
          "min": 20,
          "max": 100,
          "step": 5,
          "default": 60,
          "unit": "px"
        },
        {
          "type": "header",
          "content": "产品系列配置"
        },
        {
          "type": "collection_list",
          "id": "linked_collections",
          "label": "关联产品系列",
          "limit": 10
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "自定义菜单",
      "category": "导航",
      "blocks": [
        {
          "type": "menu_category",
          "settings": {
            "category_title": "热门商品",
            "category_description": "查看热门商品"
          }
        },
        {
          "type": "menu_category",
          "settings": {
            "category_title": "新品上市",
            "category_description": "最新上架商品"
          }
        }
      ]
    }
  ]
}
{% endschema %}

{%- style -%}
  .custom-menu-section-{{ section.id }} {
    display: flex;
    gap: 20px;
    padding: {{ section.settings.padding_top }}px 20px {{ section.settings.padding_bottom }}px;
    min-height: 500px;
    background-color: {{ section.settings.background_color }};
    max-width: 1200px;
    margin: 0 auto;
  }

  .menu-panel-{{ section.id }} {
    width: {{ section.settings.menu_width }}%;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .products-panel-{{ section.id }} {
    width: {{ section.settings.product_width }}%;
    padding: 20px;
    border: 1px solid {{ section.settings.border_color }};
    border-radius: 12px;
    background: white;
    min-height: 400px;
  }

  /* 下拉菜单样式 */
  .menu-category-{{ section.id }} {
    position: relative;
    background: white;
    border: 1px solid {{ section.settings.border_color }};
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .menu-category-{{ section.id }}:hover {
    background-color: #f8f8f8;
    border-color: #d0d0d0;
  }

  .menu-category-{{ section.id }}.active {
    background-color: #f0f8ff;
    border-color: {{ section.settings.primary_color }};
  }

  .category-header-{{ section.id }} {
    padding: 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    gap: 10px;
  }

  .category-header-content {
    flex: 1;
    min-width: 0;
    display: flex;
    align-items: center;
    gap: 12px;
    flex-direction: row;
  }
  
  .category-image-{{ section.id }} {
    width: {{ block.settings.image_width }}px;
    height: {{ block.settings.image_height }}px;
    object-fit: cover;
    border-radius: 6px;
    flex-shrink: 0;
    order: -1; /* 确保图片显示在最左侧 */
  }

  .category-text-content {
    flex: 1;
    min-width: 0;
  }

  .category-header-{{ section.id }} h3 {
    margin: 0;
    font-size: 16px;
    font-weight: 600;
    color: #333;
    line-height: 1.3;
    text-align: left;
  }

  .category-header-{{ section.id }} p {
    margin: 4px 0 0 0;
    font-size: 14px;
    color: #666;
    line-height: 1.4;
    display: block;
    text-align: left;
  }

  .dropdown-icon-container {
    flex-shrink: 0;
    margin-top: 4px;
  }

  .dropdown-icon-{{ section.id }} {
    transition: transform 0.3s ease;
    font-size: 12px;
    color: #666;
    display: block;
  }

  .dropdown-icon-{{ section.id }} {
    transition: transform 0.3s ease;
  }

  .menu-category-{{ section.id }}.active .dropdown-icon-{{ section.id }} {
    transform: rotate(180deg);
  }

  .dropdown-content-{{ section.id }} {
    display: none;
    padding: 15px;
    border-top: 1px solid {{ section.settings.border_color }};
    background: white;
  }

  .menu-category-{{ section.id }}.active .dropdown-content-{{ section.id }} {
    display: block;
  }

  .collection-list-{{ section.id }} {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .collection-item-{{ section.id }} {
    padding: 8px 0;
    border-bottom: 1px solid #f0f0f0;
    cursor: pointer;
    transition: color 0.2s ease;
    text-align: center;
  }

  .collection-item-{{ section.id }}:hover {
    color: {{ section.settings.primary_color }};
  }

  .collection-item-{{ section.id }}:last-child {
    border-bottom: none;
  }

  /* 产品展示样式 */
  .product-grid-{{ section.id }} {
    display: grid;
    grid-template-columns: repeat({{ section.settings.columns_desktop }}, minmax(0, 1fr));
    gap: 20px;
  }
  
  .product-card-{{ section.id }} {
    border: 1px solid #f0f0f0;
    border-radius: 8px;
    padding: 15px;
    text-align: center;
    transition: all 0.3s ease;
    background: white;
    list-style: none;
    margin: 0;
  }

  .product-card-{{ section.id }}:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    border-color: {{ section.settings.primary_color }};
  }

  .product-image-{{ section.id }} {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 6px;
    margin-bottom: 12px;
  }

  .product-title-{{ section.id }} {
    margin: 0 0 8px 0;
    font-size: 16px;
    font-weight: 600;
    color: #333;
  }

  .product-vendor-{{ section.id }} {
    margin: 0 0 8px 0;
    font-size: 14px;
    color: #666;
  }

  .product-price-{{ section.id }} {
    margin: 0;
    font-size: 18px;
    font-weight: bold;
    color: {{ section.settings.primary_color }};
  }

  .loading-{{ section.id }} {
    text-align: center;
    padding: 60px 20px;
    color: #999;
  }

  .empty-state-{{ section.id }} {
    text-align: center;
    padding: 60px 20px;
    color: #999;
  }

  .empty-state-{{ section.id }} h3 {
    margin: 0 0 10px 0;
    font-size: 18px;
    color: #666;
  }

  .empty-state-{{ section.id }} p {
    margin: 0;
    font-size: 14px;
  }

  /* 响应式设计 - 使用主题标准断点 */
  @media screen and (max-width: 749px) {
    .custom-menu-section-{{ section.id }} {
      flex-direction: column;
      padding: 20px 15px;
    }

    .menu-panel-{{ section.id }},
    .products-panel-{{ section.id }} {
      width: 100% !important;
    }

    .menu-panel-{{ section.id }} {
      order: 1; /* 菜单在上面 */
      margin-bottom: 20px;
    }

    .products-panel-{{ section.id }} {
      order: 2; /* 产品在下面 */
      min-height: 300px;
    }

    .product-grid-{{ section.id }} {
      grid-template-columns: repeat({{ section.settings.columns_mobile }}, minmax(0, 1fr));
      gap: 15px;
    }

    .product-image-{{ section.id }} {
      height: 150px;
    }

    .product-title-{{ section.id }} {
      font-size: 14px;
    }

    .product-price-{{ section.id }} {
      font-size: 16px;
    }

    .category-header-{{ section.id }} {
      padding: 12px;
    }

    .dropdown-content-{{ section.id }} {
      padding: 12px;
    }

    /* 移动端菜单项点击跳转 */
    .collection-item-{{ section.id }} {
      cursor: pointer;
      text-align: center;
      padding: 12px 0;
      border-bottom: 1px solid #f0f0f0;
      transition: all 0.2s ease;
    }

    .collection-item-{{ section.id }}:hover,
    .collection-item-{{ section.id }}:active {
      background-color: #f8f8f8;
      color: {{ section.settings.primary_color }};
    }
  }

  /* 置顶按钮样式 - 只在移动端显示 */
  .sticky-header-{{ section.id }} {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: white;
    padding: 15px;
    border-bottom: 2px solid {{ section.settings.primary_color }};
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    display: none; /* 默认隐藏 */
    align-items: center;
    justify-content: space-between;
  }

  .sticky-header-{{ section.id }} .sticky-title {
    font-size: 18px;
    font-weight: bold;
    color: {{ section.settings.primary_color }};
    margin: 0;
  }

  .sticky-header-{{ section.id }} .back-button {
    background: {{ section.settings.primary_color }};
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 20px;
    cursor: pointer;
    font-size: 14px;
  }

  /* 桌面端置顶按钮完全隐藏 - 使用主题标准断点 */
  @media screen and (min-width: 750px) {
    .sticky-header-{{ section.id }} {
      width: 1px !important;
      display: none !important;
      visibility: hidden !important;
      opacity: 0 !important;
      height: 0 !important;
      overflow: hidden !important;
    }
  }
{%- endstyle -%}

<div class="custom-menu-section-{{ section.id }}">
  <!-- 置顶按钮 - 移动端使用 -->
  <div class="sticky-header-{{ section.id }}" id="sticky-header-{{ section.id }}">
    <h3 class="sticky-title"></h3>
  <button class="back-button" onclick="backToMenuList()">Back to List</button>
  </div>

  <!-- 左侧菜单面板 -->
  <div class="menu-panel-{{ section.id }}">
    {% for block in section.blocks %}
      {% if block.type == 'menu_category' %}
        <div class="menu-category-{{ section.id }}" data-category="{{ block.id }}">
          <div class="category-header-{{ section.id }}">
            <div class="category-header-content">
              {% if block.settings.category_image %}
                <img class="category-image-{{ section.id }}" 
                     src="{{ block.settings.category_image | img_url: 'medium' }}" 
                     alt="{{ block.settings.category_title }}"
                     width="{{ block.settings.image_width }}"
                     height="{{ block.settings.image_height }}">
              {% endif %}
              <div class="category-text-content">
                <h3>{{ block.settings.category_title }}</h3>
                <p>{{ block.settings.category_description }}</p>
              </div>
            </div>
            <div class="dropdown-icon-container">
              <span class="dropdown-icon-{{ section.id }}">▼</span>
            </div>
          </div>
          
          <div class="dropdown-content-{{ section.id }}">
            {% if block.settings.linked_collections %}
              <ul class="collection-list-{{ section.id }}">
                {% for collection in block.settings.linked_collections %}
                  <li class="collection-item-{{ section.id }}" 
                      data-collection-id="{{ collection.id }}"
                      data-collection-handle="{{ collection.handle }}"
                      data-category-title="{{ block.settings.category_title }}">
                    {{ collection.title }}
                  </li>
                {% endfor %}
              </ul>
    {% else %}
      <p class="empty-state-{{ section.id }}">No collections linked</p>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
    
    {% if section.blocks.size == 0 %}
      <div class="empty-state-{{ section.id }}">
        <h3>Please add menu categories</h3>
        <p>Click "Add content" in the theme editor to create menu categories</p>
      </div>
    {% endif %}
  </div>
  
  <!-- 右侧产品展示面板 -->
  <div class="products-panel-{{ section.id }}">
    <div class="empty-state-{{ section.id }}">
      <h3>Please click on the left menu to view products</h3>
      <p>Click menu categories to show all products, click specific collections to show collection products</p>
    </div>
  </div>
</div>

<script>
// 性能优化版本 - 减少DOM操作，优化AJAX请求，简化产品显示逻辑
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = '{{ section.id }}';
  const productsPanel = document.querySelector(`.products-panel-${sectionId}`);
  let allProductsData = null;
  let isProcessing = false;
  let activeRequest = null;

  // 缓存DOM元素引用
  const cachedElements = {
    stickyHeader: document.getElementById(`sticky-header-${sectionId}`),
    menuCategories: document.querySelectorAll(`.menu-category-${sectionId}`),
    collectionItems: document.querySelectorAll(`.collection-item-${sectionId}`)
  };

  // 取消当前正在进行的请求
  function cancelActiveRequest() {
    if (activeRequest) {
      activeRequest.abort();
      activeRequest = null;
    }
  }

  // 显示加载状态
  function showLoadingState(message = 'Loading products...') {
    productsPanel.innerHTML = `
      <div class="loading-${sectionId}">
        <p>${message}</p>
      </div>
    `;
  }

  // 显示错误状态
  function showErrorState() {
    productsPanel.innerHTML = `
      <div class="empty-state-${sectionId}">
        <div style="font-size: 24px; margin-bottom: 10px;">❌</div>
        <h3>Load Failed</h3>
        <p>Unable to load product data, please try again later</p>
      </div>
    `;
  }

  // 显示空状态
  function showEmptyState() {
    productsPanel.innerHTML = `
      <div class="empty-state-${sectionId}">
        <div style="font-size: 24px; margin-bottom: 10px;">📦</div>
        <h3>No Products</h3>
        <p>Please configure product collections first</p>
      </div>
    `;
  }

  // 性能优化：使用事件委托
  function setupEventDelegation() {
    const menuPanel = document.querySelector(`.menu-panel-${sectionId}`);
    if (!menuPanel) return;

    menuPanel.addEventListener('click', function(e) {
      if (isProcessing) return;
      
      const target = e.target;
      const category = target.closest(`.menu-category-${sectionId}`);
      const collectionItem = target.closest(`.collection-item-${sectionId}`);
      
      if (category) {
        e.preventDefault();
        handleCategoryClick(category);
      } else if (collectionItem) {
        e.preventDefault();
        e.stopPropagation();
        handleCollectionClick(collectionItem);
      }
    });
  }

  // 处理分类点击
  function handleCategoryClick(category) {
    cancelActiveRequest();
    isProcessing = true;
    
    // 更新激活状态
    cachedElements.menuCategories.forEach(cat => cat.classList.remove('active'));
    category.classList.add('active');
    
    // 移除所有系列项的激活状态
    cachedElements.collectionItems.forEach(item => item.classList.remove('active'));
    
    loadAllProducts();
  }

  // 处理系列点击
  function handleCollectionClick(collectionItem) {
    cancelActiveRequest();
    isProcessing = true;
    
    const collectionHandle = collectionItem.getAttribute('data-collection-handle');
    const categoryTitle = collectionItem.getAttribute('data-category-title');
    
    if (!collectionHandle) {
      showEmptyState();
      isProcessing = false;
      return;
    }

    // 更新激活状态
    cachedElements.collectionItems.forEach(item => item.classList.remove('active'));
    collectionItem.classList.add('active');
    
    // 设置父分类为激活状态
    const parentCategory = collectionItem.closest(`.menu-category-${sectionId}`);
    if (parentCategory) {
      cachedElements.menuCategories.forEach(cat => cat.classList.remove('active'));
      parentCategory.classList.add('active');
    }

    // 检查是否是移动设备
    const isMobile = window.innerWidth <= 749;
    
    if (isMobile) {
      // 移动端：显示置顶按钮
      const stickyTitle = cachedElements.stickyHeader.querySelector('.sticky-title');
      stickyTitle.textContent = categoryTitle || 'Product List';
      cachedElements.stickyHeader.style.display = 'flex';
      
      // 滚动到产品面板
      productsPanel.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
    
    loadSingleCollection(collectionHandle);
  }

  // 加载所有系列的产品（优化版本）
  function loadAllProducts() {
    if (allProductsData) {
      displayProducts(allProductsData);
      isProcessing = false;
      return;
    }

    showLoadingState('Loading all products...');

    // 收集所有系列句柄
    const collectionHandles = [];
    cachedElements.collectionItems.forEach(item => {
      const handle = item.getAttribute('data-collection-handle');
      if (handle) collectionHandles.push(handle);
    });

    if (collectionHandles.length === 0) {
      showEmptyState();
      isProcessing = false;
      return;
    }

    // 限制并发请求数量（最多3个）
    const MAX_CONCURRENT_REQUESTS = 3;
    const results = new Array(collectionHandles.length).fill('');
    let completed = 0;

    function processBatch(startIndex) {
      const batch = collectionHandles.slice(startIndex, startIndex + MAX_CONCURRENT_REQUESTS);
      const promises = batch.map((handle, index) => 
        fetch(`/collections/${handle}`)
          .then(response => response.ok ? response.text() : '')
          .then(html => {
            results[startIndex + index] = html;
            completed++;
            
            // 更新进度
            if (completed % 2 === 0) { // 每完成2个请求更新一次进度
              const progress = Math.round((completed / collectionHandles.length) * 100);
              showLoadingState(`Loading all products... ${progress}%`);
            }
          })
          .catch(() => '')
      );

      return Promise.all(promises);
    }

    // 分批处理请求
    (async function() {
      try {
        for (let i = 0; i < collectionHandles.length; i += MAX_CONCURRENT_REQUESTS) {
          await processBatch(i);
        }
        
        const combinedHtml = results.filter(html => html.trim()).join('');
        allProductsData = combinedHtml;
        displayProducts(combinedHtml);
        isProcessing = false;
      } catch (error) {
        console.error('加载所有产品错误:', error);
        showErrorState();
        isProcessing = false;
      }
    })();
  }

  // 加载单个系列的产品
  function loadSingleCollection(collectionHandle) {
    showLoadingState('Loading collection products...');

    // 使用AbortController控制请求
    const controller = new AbortController();
    activeRequest = controller;

    // 直接加载系列页面，不使用ajax-products视图参数
    // 这样可以确保加载特定系列的正确产品
    fetch(`/collections/${collectionHandle}`, {
      signal: controller.signal
    })
      .then(response => {
        if (!response.ok) throw new Error('Network response error');
        return response.text();
      })
      .then(html => {
        displayProducts(html);
        isProcessing = false;
        activeRequest = null;
      })
      .catch(error => {
        if (error.name === 'AbortError') {
          console.log('请求被取消');
        } else {
          console.error('加载系列产品错误:', error);
          showErrorState();
        }
        isProcessing = false;
        activeRequest = null;
      });
  }

  // 详细的产品显示逻辑 - 修复重复显示问题
  function displayProducts(html) {
    if (!html || typeof html !== 'string' || html.trim() === '') {
      showEmptyState();
      return;
    }

    // 创建临时容器来解析HTML
    const tempContainer = document.createElement('div');
    tempContainer.innerHTML = html;
    
    // 调试：记录HTML内容以查看实际返回了什么
    console.log('Received HTML content length:', html.length);
    console.log('HTML contains collection title:', html.includes('collection-title') || html.includes('collection__title'));
    
    // 获取产品网格元素 - 使用更精确的选择器
    const productGrid = tempContainer.querySelector('.grid.product-grid, .grid--2-col, .grid--3-col, .grid--4-col, [data-section-type="collection-template"] .grid, .collection .grid');
    
    if (!productGrid) {
      console.log('No product grid found in HTML. Available elements:');
      const allElements = tempContainer.querySelectorAll('*');
      allElements.forEach(el => {
        if (el.className && el.className.includes('grid')) {
          console.log('Found grid element:', el.className);
        }
      });
      showEmptyState();
      return;
    }

    console.log('Found product grid with class:', productGrid.className);
    
    // 创建新的产品网格容器
    const newProductGrid = document.createElement('div');
    newProductGrid.className = 'product-grid-{{ section.id }}';
    
    // 使用更精确的产品选择器 - 只选择真正的产品卡片
    // 优先选择具有产品数据属性的元素，避免选择重复的卡片
    let productCards = productGrid.querySelectorAll('[data-product-id], [data-product-handle], [data-product-url]');
    
    // 如果没有找到，尝试其他常见的选择器
    if (productCards.length === 0) {
      productCards = productGrid.querySelectorAll('.grid__item:not(.grid__item--no-result), .card:not(.card--no-result), .product-card, .card-wrapper');
    }
    
    console.log('Found', productCards.length, 'potential product cards');
    
    if (productCards.length === 0) {
      showEmptyState();
      return;
    }

    // 使用Set来跟踪已处理的产品，避免重复
    const processedProducts = new Set();
    const uniqueProductCards = [];
    
    // 首先过滤出唯一的产品卡片
    productCards.forEach((card) => {
      // 获取产品的唯一标识 - 优先使用data-product-handle
      const productHandle = card.getAttribute('data-product-handle') || 
                           card.querySelector('[data-product-handle]')?.getAttribute('data-product-handle');
      const productId = card.getAttribute('data-product-id') || 
                        card.querySelector('[data-product-id]')?.getAttribute('data-product-id');
      const productUrl = card.querySelector('a[href*="/products/"]')?.href;
      
      // 使用产品handle作为主要唯一标识
      const uniqueId = productHandle || productId || productUrl;
      
      if (!uniqueId) {
        console.log('Skipping card without unique identifier:', card);
        return;
      }
      
      // 如果这个产品已经处理过，跳过
      if (processedProducts.has(uniqueId)) {
        console.log('Skipping duplicate product:', uniqueId);
        return;
      }
      
      processedProducts.add(uniqueId);
      uniqueProductCards.push(card);
    });

    console.log('After deduplication:', uniqueProductCards.length, 'unique products');
    
    // 处理每个唯一的产品卡片
    uniqueProductCards.forEach((card, index) => {
      const newCard = document.createElement('div');
      newCard.className = 'product-card-{{ section.id }}';
      
      // 复制原始卡片内容
      newCard.innerHTML = card.innerHTML;
      
      // 确保图片正确显示
      const images = newCard.querySelectorAll('img');
      images.forEach(img => {
        if (img.src && !img.src.includes('http')) {
          // 修复相对路径图片
          img.src = img.src.replace(/^\/\//, 'https://');
        }
        img.style.width = '100%';
        img.style.height = '200px';
        img.style.objectFit = 'cover';
        img.style.borderRadius = '6px';
        img.style.marginBottom = '12px';
      });
      
      // 确保标题样式
      const title = newCard.querySelector('.card__heading, .card-information__text, .product-title, [data-product-title]');
      if (title) {
        title.className = 'product-title-{{ section.id }}';
        title.style.margin = '0 0 8px 0';
        title.style.fontSize = '16px';
        title.style.fontWeight = '600';
        title.style.color = '#333';
      }
      
      // 确保价格样式
      const price = newCard.querySelector('.price, .price-item, .product-price, [data-product-price]');
      if (price) {
        price.className = 'product-price-{{ section.id }}';
        price.style.margin = '0';
        price.style.fontSize = '18px';
        price.style.fontWeight = 'bold';
        price.style.color = '{{ section.settings.primary_color }}';
      }
      
      // 添加动画延迟
      newCard.style.animationDelay = `${index * 0.05}s`;
      
      newProductGrid.appendChild(newCard);
    });

    console.log('Displaying', uniqueProductCards.length, 'unique products');
    
    // 使用requestAnimationFrame提高性能
    requestAnimationFrame(() => {
      productsPanel.innerHTML = '';
      productsPanel.appendChild(newProductGrid);
    });
  }

  // 初始化
  function init() {
    setupEventDelegation();
    
    // 默认加载所有产品（延迟执行以避免阻塞主线程）
    setTimeout(() => {
      if (!isProcessing) {
        loadAllProducts();
        // 默认激活第一个菜单分类
        if (cachedElements.menuCategories.length > 0) {
          cachedElements.menuCategories[0].classList.add('active');
        }
      }
    }, 100);
  }

  // 启动初始化
  init();
});

// 返回菜单列表函数
function backToMenuList() {
  const stickyHeader = document.getElementById(`sticky-header-{{ section.id }}`);
  if (stickyHeader) {
    stickyHeader.style.display = 'none';
  }
  
  // 滚动回顶部
  window.scrollTo({
    top: 0,
    behavior: 'smooth'
  });
}

// 预加载CSS动画（避免动态创建style标签）
if (!document.getElementById('custom-menu-animations')) {
  const style = document.createElement('style');
  style.id = 'custom-menu-animations';
  style.textContent = `
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .product-card-{{ section.id }} {
      animation: fadeIn 0.3s ease forwards;
    }
  `;
  document.head.appendChild(style);
}
</script>

{% comment %}
  使用说明:
  1. 将此文件保存为 sections/custom-menu.liquid
  2. 在主题编辑器中添加此section
  3. 点击"添加内容"创建菜单按钮
  4. 为每个按钮配置标题、描述和关联的系列
  5. 保存后即可使用
{% endcomment %}
